<UserControl x:Class="UniMarte.Wpf.ControleCustomizado.TecladoVirtual"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:UniMarte.Wpf.ControleCustomizado"
             mc:Ignorable="d" 
             d:DesignHeight="458.97" d:DesignWidth="1236.545">
    <UserControl.Resources>
        <Style x:Key="FocusVisual">
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate>
                        <Rectangle Margin="2" StrokeDashArray="1 2" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" SnapsToDevicePixels="true" StrokeThickness="1"/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="OptionMarkFocusVisual">
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate>
                        <Rectangle Margin="14,0,0,0" StrokeDashArray="1 2" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" SnapsToDevicePixels="true" StrokeThickness="1"/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <SolidColorBrush x:Key="OptionMark.Static.Background" Color="#FFFFFFFF"/>
        <SolidColorBrush x:Key="OptionMark.Static.Border" Color="#FF707070"/>
        <SolidColorBrush x:Key="OptionMark.Static.Glyph" Color="#FF212121"/>
        <SolidColorBrush x:Key="OptionMark.MouseOver.Background" Color="#FFF3F9FF"/>
        <SolidColorBrush x:Key="OptionMark.MouseOver.Border" Color="#FF5593FF"/>
        <SolidColorBrush x:Key="OptionMark.MouseOver.Glyph" Color="#FF212121"/>
        <SolidColorBrush x:Key="OptionMark.Pressed.Background" Color="#FFD9ECFF"/>
        <SolidColorBrush x:Key="OptionMark.Pressed.Border" Color="#FF3C77DD"/>
        <SolidColorBrush x:Key="OptionMark.Pressed.Glyph" Color="#FF212121"/>
        <SolidColorBrush x:Key="OptionMark.Disabled.Background" Color="#FFE6E6E6"/>
        <SolidColorBrush x:Key="OptionMark.Disabled.Border" Color="#FFBCBCBC"/>
        <SolidColorBrush x:Key="OptionMark.Disabled.Glyph" Color="#FF707070"/>
        <Style x:Key="Shift" TargetType="{x:Type CheckBox}">
            <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
            <Setter Property="Background" Value="{StaticResource OptionMark.Static.Background}"/>
            <Setter Property="BorderBrush" Value="{StaticResource OptionMark.Static.Border}"/>
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type CheckBox}">
                        <Grid x:Name="templateRoot" Background="Transparent" SnapsToDevicePixels="True">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition Width="*"/>
                            </Grid.ColumnDefinitions>
                            <Border x:Name="checkBoxBorder" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="1" VerticalAlignment="{TemplateBinding VerticalContentAlignment}">
                                <Grid x:Name="markGrid">
                                    <Path x:Name="optionMark" Data="F1 M 9.97498,1.22334L 4.6983,9.09834L 4.52164,9.09834L 0,5.19331L 1.27664,3.52165L 4.255,6.08833L 8.33331,1.52588e-005L 9.97498,1.22334 Z " Fill="{StaticResource OptionMark.Static.Glyph}" Margin="1" Opacity="0" Stretch="None"/>
                                    <Rectangle x:Name="indeterminateMark" Fill="{StaticResource OptionMark.Static.Glyph}" Margin="2" Opacity="0"/>
                                </Grid>
                            </Border>
                            <ContentPresenter x:Name="contentPresenter" Grid.Column="1" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="HasContent" Value="true">
                                <Setter Property="FocusVisualStyle" Value="{StaticResource OptionMarkFocusVisual}"/>
                                <Setter Property="Padding" Value="4,-1,0,0"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="Background" TargetName="checkBoxBorder" Value="{StaticResource OptionMark.MouseOver.Background}"/>
                                <Setter Property="BorderBrush" TargetName="checkBoxBorder" Value="{StaticResource OptionMark.MouseOver.Border}"/>
                                <Setter Property="Fill" TargetName="optionMark" Value="{StaticResource OptionMark.MouseOver.Glyph}"/>
                                <Setter Property="Fill" TargetName="indeterminateMark" Value="{StaticResource OptionMark.MouseOver.Glyph}"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Background" TargetName="checkBoxBorder" Value="{StaticResource OptionMark.Disabled.Background}"/>
                                <Setter Property="BorderBrush" TargetName="checkBoxBorder" Value="{StaticResource OptionMark.Disabled.Border}"/>
                                <Setter Property="Fill" TargetName="optionMark" Value="{StaticResource OptionMark.Disabled.Glyph}"/>
                                <Setter Property="Fill" TargetName="indeterminateMark" Value="{StaticResource OptionMark.Disabled.Glyph}"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter Property="Background" TargetName="checkBoxBorder" Value="{StaticResource OptionMark.Pressed.Background}"/>
                                <Setter Property="BorderBrush" TargetName="checkBoxBorder" Value="{StaticResource OptionMark.Pressed.Border}"/>
                                <Setter Property="Fill" TargetName="optionMark" Value="{StaticResource OptionMark.Pressed.Glyph}"/>
                                <Setter Property="Fill" TargetName="indeterminateMark" Value="{StaticResource OptionMark.Pressed.Glyph}"/>
                            </Trigger>
                            <Trigger Property="IsChecked" Value="true">
                                <Setter Property="Opacity" TargetName="optionMark" Value="1"/>
                                <Setter Property="Opacity" TargetName="indeterminateMark" Value="0"/>
                            </Trigger>
                            <Trigger Property="IsChecked" Value="{x:Null}">
                                <Setter Property="Opacity" TargetName="optionMark" Value="0"/>
                                <Setter Property="Opacity" TargetName="indeterminateMark" Value="1"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style TargetType="Button">
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="BorderBrush" Value="Transparent"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="Padding" Value="10"/>
            <Setter Property="Margin" Value="5"/>
            <Setter Property="FontFamily" Value="Segoe UI Semibold"/>
            <Setter Property="FontSize" Value="20"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border x:Name="border"
                            Background="LightGray"
                            BorderBrush="Gray"
                            BorderThickness="1"
                            CornerRadius="15"
                            Padding="{TemplateBinding Padding}">
                            <ContentPresenter HorizontalAlignment="Center"
                                          VerticalAlignment="Center"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <!-- Mudar cor quando o botão for pressionado -->
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter TargetName="border" Property="Background" Value="DarkBlue"/>
                                <Setter TargetName="border" Property="BorderBrush" Value="Black"/>
                            </Trigger>
                            <!-- Mudar cor quando o botão for pressionado -->
                            <Trigger Property="IsPressed" Value="True">
                                <Setter TargetName="border" Property="Background" Value="LightGreen"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </UserControl.Resources>
    <Grid Height="440" Width="1200" HorizontalAlignment="Stretch" VerticalAlignment="Stretch">
        <Grid.RowDefinitions>
            <RowDefinition Height="*" />
            <RowDefinition Height="*" />
            <RowDefinition Height="*" />
            <RowDefinition Height="*" />
            <RowDefinition Height="*" />
        </Grid.RowDefinitions>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="*" />
            <ColumnDefinition Width="*" />
            <ColumnDefinition Width="*" />
            <ColumnDefinition Width="*" />
            <ColumnDefinition Width="*" />
            <ColumnDefinition Width="*" />
            <ColumnDefinition Width="*" />
            <ColumnDefinition Width="*" />
            <ColumnDefinition Width="*" />
            <ColumnDefinition Width="*" />
            <ColumnDefinition Width="*" />
            <ColumnDefinition Width="*" />
        </Grid.ColumnDefinitions>
        <CheckBox x:Name="chkShift" Content="SHIFT" Grid.Row="3" Grid.Column="0" Grid.ColumnSpan="2" FontFamily="Segoe UI Semibold" FontSize="20" Padding="10" Margin="5" >
            <CheckBox.Template>
                <ControlTemplate TargetType="CheckBox">
                    <Border x:Name="border"
                        Background="LightGray"
                        BorderBrush="Gray"
                        BorderThickness="1"
                        CornerRadius="10"
                        Padding="10">
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <!-- Mudar cor quando o CheckBox estiver marcado -->
                        <Trigger Property="IsChecked" Value="True">
                            <Setter TargetName="border" Property="Background" Value="LightGreen"/>
                        </Trigger>
                        <!-- Animação para quando o CheckBox for pressionado -->
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="border" Property="Background" Value="DarkBlue"/>
                            <Setter TargetName="border" Property="BorderBrush" Value="Black"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </CheckBox.Template>
        </CheckBox>
        <Button Name="btn1" Content="1" Click="Button_Click" Tag="1" Grid.Row="0" Grid.Column="1" />
        <Button Name="btn2" Content="2" Click="Button_Click" Tag="2" Grid.Row="0" Grid.Column="2" />
        <Button Name="btn3" Content="3" Click="Button_Click" Tag="3" Grid.Row="0" Grid.Column="3" />
        <Button Name="btn4" Content="4" Click="Button_Click" Tag="4" Grid.Row="0" Grid.Column="4" />
        <Button Name="btn5" Content="5" Click="Button_Click" Tag="5" Grid.Row="0" Grid.Column="5" />
        <Button Name="btn6" Content="6" Click="Button_Click" Tag="6" Grid.Row="0" Grid.Column="6" />
        <Button Name="btn7" Content="7" Click="Button_Click" Tag="7" Grid.Row="0" Grid.Column="7" />
        <Button Name="btn8" Content="8" Click="Button_Click" Tag="8" Grid.Row="0" Grid.Column="8" />
        <Button Name="btn9" Content="9" Click="Button_Click" Tag="9" Grid.Row="0" Grid.Column="9" />
        <Button Name="btn0" Content="0" Click="Button_Click" Tag="0" Grid.Row="0" Grid.Column="10" />
        <Button Name="btnQ" Content="Q" Click="Button_Click" Tag="Q" Grid.Row="1" Grid.Column="0" />
        <Button Name="btnW" Content="W" Click="Button_Click" Tag="W" Grid.Row="1" Grid.Column="1" />
        <Button Name="btnE" Content="E" Click="Button_Click" Tag="E" Grid.Row="1" Grid.Column="2" />
        <Button Name="btnR" Content="R" Click="Button_Click" Tag="R" Grid.Row="1" Grid.Column="3" />
        <Button Name="btnT" Content="T" Click="Button_Click" Tag="T" Grid.Row="1" Grid.Column="4" />
        <Button Name="btnY" Content="Y" Click="Button_Click" Tag="Y" Grid.Row="1" Grid.Column="5" />
        <Button Name="btnU" Content="U" Click="Button_Click" Tag="U" Grid.Row="1" Grid.Column="6" />
        <Button Name="btnI" Content="I" Click="Button_Click" Tag="I" Grid.Row="1" Grid.Column="7" />
        <Button Name="btnO" Content="O" Click="Button_Click" Tag="O" Grid.Row="1" Grid.Column="8" />
        <Button Name="btnP" Content="P" Click="Button_Click" Tag="P" Grid.Row="1" Grid.Column="9" />
        <Button Name="btnA" Content="A" Click="Button_Click" Tag="A" Grid.Row="2" Grid.Column="0" />
        <Button Name="btnS" Content="S" Click="Button_Click" Tag="S" Grid.Row="2" Grid.Column="1" />
        <Button Name="btnD" Content="D" Click="Button_Click" Tag="D" Grid.Row="2" Grid.Column="2" />
        <Button Name="btnF" Content="F" Click="Button_Click" Tag="F" Grid.Row="2" Grid.Column="3" />
        <Button Name="btnG" Content="G" Click="Button_Click" Tag="G" Grid.Row="2" Grid.Column="4" />
        <Button Name="btnH" Content="H" Click="Button_Click" Tag="H" Grid.Row="2" Grid.Column="5" />
        <Button Name="btnJ" Content="J" Click="Button_Click" Tag="J" Grid.Row="2" Grid.Column="6" />
        <Button Name="btnK" Content="K" Click="Button_Click" Tag="K" Grid.Row="2" Grid.Column="7" />
        <Button Name="btnL" Content="L" Click="Button_Click" Tag="L" Grid.Row="2" Grid.Column="8" />
        <Button Name="btnÇ" Content="Ç" Click="Button_Click" Tag="Ç" Grid.Row="2" Grid.Column="9" />
        <Button Name="btnZ" Content="Z" Click="Button_Click" Tag="Z" Grid.Row="3" Grid.Column="2" />
        <Button Name="btnX" Content="X" Click="Button_Click" Tag="X" Grid.Row="3" Grid.Column="3" />
        <Button Name="btnC" Content="C" Click="Button_Click" Tag="C" Grid.Row="3" Grid.Column="4" />
        <Button Name="btnV" Content="V" Click="Button_Click" Tag="V" Grid.Row="3" Grid.Column="5" />
        <Button Name="btnB" Content="B" Click="Button_Click" Tag="B" Grid.Row="3" Grid.Column="6" />
        <Button Name="btnN" Content="N" Click="Button_Click" Tag="N" Grid.Row="3" Grid.Column="7" />
        <Button Name="btnM" Content="M" Click="Button_Click" Tag="M" Grid.Row="3" Grid.Column="8" />
        <Button Name="btnATil" Content="Ã" Click="Button_Click" Tag="Ã" Grid.Row="4" Grid.Column="0" />
        <Button Name="btnAAgudo" Content="Á" Click="Button_Click" Tag="Á" Grid.Row="4" Grid.Column="1" />
        <Button Name="btnEAgudo" Content="É" Click="Button_Click" Tag="É" Grid.Row="3" Grid.Column="11" />
        <Button Name="btnOTil" Content="Õ" Click="Button_Click" Tag="Õ" Grid.Row="2" Grid.Column="10" />
        <Button Name="btnOAgudo" Content="Ó" Click="Button_Click" Tag="Ó" Grid.Row="2" Grid.Column="11" />
        <Button Name="btnPonto" Content="." Click="Button_Click" Tag="." Grid.Row="3" Grid.Column="10" />
        <Button Name="btnBarra" Content="/" Click="Button_Click" Tag="/" Grid.Row="3" Grid.Column="9" />
        <Button Name="btnVirgula" Content="," Click="Button_Click" Tag="," Grid.Row="4" Grid.Column="10" />
        <Button Name="btnArroba" Content="@" Click="Button_Click" Tag="@" Grid.Row="4" Grid.Column="11" />
        <Button Name="btnEspaco" Content="ESPAÇO" Click="Button_Click" Tag=" " Grid.Row="4" Grid.Column="3" Grid.ColumnSpan="6" />
        <Button Name="btnApagar" Grid.Row="1" Grid.Column="10" Grid.ColumnSpan="2"  Click="btnApagar_Click">
            <StackPanel Orientation="Horizontal">
                <TextBlock Text="APAGAR" VerticalAlignment="Center"/>
                <Image Source="/Imagens/Icones/seta-esquerda.png"
                   Stretch="Fill" Height="60" Width="82" Margin="10,0,0,0"/>
            </StackPanel>
        </Button>
    </Grid>
</UserControl>
